definitions:
  dto.AuthenticateStatusResponse:
    properties:
      authenticated:
        type: boolean
      statusCode:
        type: integer
    type: object
  dto.ErrorResponse:
    properties:
      errorCode:
        type: integer
      message:
        type: string
    type: object
  dto.SuccessResponse:
    properties:
      message:
        type: string
      statusCode:
        type: integer
    type: object
  dto.TokenDto:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  dto.UserDTO:
    properties:
      email:
        type: string
      id:
        type: string
      password:
        type: string
    type: object
info:
  contact: {}
paths:
  /change-password:
    post:
      consumes:
      - application/json
      description: ChangePassword
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: newPassword
        in: formData
        name: newPassword
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: ChangePassword
      tags:
      - Authentication
  /confirm-password-reset:
    post:
      consumes:
      - application/json
      description: ConfirmPasswordReset
      parameters:
      - description: reset-token
        in: path
        name: reset-token
        required: true
        type: string
      - description: newPassword
        in: formData
        name: newPassword
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: ConfirmPasswordReset
      tags:
      - Authentication
  /is-user-authenticated:
    post:
      consumes:
      - application/json
      description: IsUserAuthenticated
      parameters:
      - description: accesstoken
        in: body
        name: token
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.AuthenticateStatusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: IsUserAuthenticated
      tags:
      - Authentication
  /login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: Email
        in: formData
        name: email
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TokenDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Login
      tags:
      - Authentication
  /logout:
    get:
      consumes:
      - application/json
      description: Logout
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Logout
      tags:
      - Authentication
  /register:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.UserDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Register a new user
      tags:
      - Authentication
  /request-password-reset:
    post:
      consumes:
      - application/json
      description: RequestPasswordReset
      parameters:
      - description: Email
        in: formData
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: RequestPasswordReset
      tags:
      - Authentication
swagger: "2.0"
